import random
import discord
from discord.ext import commands
import pytz
from pytz import timezone
from datetime import datetime, timedelta
import asyncio
import typing
from pytimeparse import parse as parse_time
import config

intents = discord.Intents.all()
intents.message_content = True
client = commands.Bot(command_prefix=config.PREFIX, intents=intents)
token = config.TOKEN

giveaways = {}

class Giveaway(commands.Cog):
    def __init__(self, client):
        self.client = client
        self.current_winner = None
        self.prize = ""
    
    @client.command()
    async def ga(self, ctx, duration: str, winners: str, *, prize_name: str):
        global my_emoji
        
        global current_winner
        global prize
        prize = prize_name
        emojis = await ctx.guild.fetch_emoji(1100838235908882512)
        def get_vn_time():
            utc_now = pytz.utc.localize(datetime.utcnow())
            vn_tz = timezone('Asia/Ho_Chi_Minh')
            vn_time = utc_now.astimezone(vn_tz)
            return vn_time

        vn_time = get_vn_time()

        # T√≠nh th·ªùi gian k·∫øt th√∫c giveaway
        duration_seconds = parse_time(duration)
        duration_timedelta = timedelta(seconds=duration_seconds)
        end_time = vn_time + duration_timedelta
        # T·∫°o tin nh·∫Øn embed
        if winners.endswith("w"):
            winners = int(winners[:-1])

            embed = discord.Embed(title="",
                      description="",
                      color=discord.Color.from_rgb(255, 0, 255))
            embed.set_author(name=f"{prize}", icon_url=ctx.guild.icon.url)
            embed.add_field(name=f"‚úß Ng∆∞·ªùi t·ªï ch·ª©c:",
                            value=f"{ctx.author.mention} \u200b",
                            inline=True)
            embed.add_field(name=f"‚úß Th·ªùi gian c√≤n l·∫°i:",
                            value=f"\u200b",
                            inline=False)
            embed.set_footer(text=f"{winners} gi·∫£i | Quay th∆∞·ªüng v√†o")
            embed.timestamp = end_time
            message = await ctx.send(embed=embed)
            # L∆∞u th√¥ng tin c·ªßa giveaway
            giveaways[message.id] = {
                'message': message,
                'prize': prize,
                'users_list': []
            }
            try:
                await ctx.message.delete()
            except discord.NotFound:
            # N·∫øu kh√¥ng t√¨m th·∫•y tin nh·∫Øn ƒë·ªÉ x√≥a, kh√¥ng l√†m g√¨ c·∫£
                pass
            # Th√™m reaction ƒë·ªÉ tham gia giveaway
            await message.add_reaction(emojis)
            # ƒê·∫∑t l√†m bi·∫øn to√†n c·ª•c
            my_emoji = emojis
            # B·∫Øt ƒë·∫ßu ƒë·∫øm ng∆∞·ª£c
            while True:
            # L·∫•y th·ªùi gian hi·ªán t·∫°i
                now_utc = pytz.utc.localize(datetime.utcnow())
                now_vn = now_utc.astimezone(timezone('Asia/Ho_Chi_Minh'))
                # T√≠nh to√°n th·ªùi gian c√≤n l·∫°i cho ƒë·∫øn khi k·∫øt th√∫c giveaway
                delta_time = end_time - now_vn
                delta_seconds = delta_time.total_seconds()
                if delta_seconds <= 0:
                    # ƒê·∫øm ng∆∞·ª£c th·ªùi gian v√† ch·ªçn ng∆∞·ªùi th·∫Øng cu·ªôc
                    await asyncio.sleep(duration_seconds)
                    message = await ctx.fetch_message(message.id)
                    reaction = discord.utils.get(message.reactions, emoji=emojis)
                    users = [user async for user in reaction.users() if not user.bot]
                    users_list = list(users)
                    if client.user in users_list:
                        users_list.remove(client.user)
                    if len(users_list) < winners:
                        winners = len(users_list)
                    if not users_list:
                        await message.reply("Kh√¥ng c√≥ ai tham gia giveaway.")
                        return
                    winners_list = random.sample(users_list, winners)
                    winner_mentions = " ".join(
                    [current_winner.mention for current_winner in winners_list])

                    # Ch·ªânh s·ª≠a embed c·ªßa tin nh·∫Øn Giveaway k·∫øt th√∫c
                    embed = discord.Embed(title="",
                                        description=F"",
                                        color=discord.Color.from_rgb(255, 0, 255))
                    embed.set_author(name=f"{prize}", icon_url=ctx.guild.icon.url)
                    embed.add_field(name="Ô∏èüèÜ Ng∆∞·ªùi th·∫Øng",
                                    value=winner_mentions,
                                    inline=False)
                    embed.add_field(name="üéóÔ∏è ƒê∆∞·ª£c t·ªï ch·ª©c b·ªüi",
                                    value=ctx.author.mention,
                                    inline=False)
                    embed.set_footer(icon_url=ctx.author.avatar.url,
                    text=f"ƒê√£ quay th∆∞·ªüng v√†o")
                    embed.timestamp = end_time
                    await message.edit(embed=embed)

                    # T·∫°o m·ªôt embed m·ªõi ƒë·ªÉ th√¥ng b√°o cho ng∆∞·ªùi th·∫Øng cu·ªôc
                    await message.reply(
                    content=
                    f"**Ch√∫c m·ª´ng** {winner_mentions}, ƒë√£ th·∫Øng gi·∫£i th∆∞·ªüng **{prize}** trong giveaway n√†y!"
                    )
                    break
                # C·∫≠p nh·∫≠t embed v·ªõi th·ªùi gian ƒë·∫øm ng∆∞·ª£c hi·ªán t·∫°i
                if duration_seconds < 60:
                    countdown = f"{int(delta_seconds)} Gi√¢y"
                    await asyncio.sleep(1)    
                else:
                    days = delta_time.days
                    hours, remainder = divmod(delta_seconds, 3600)
                    minutes, seconds = divmod(remainder, 60)
                    countdown = f"{int(hours)}H{int(minutes)}M{int(seconds)}S"
                embed.set_field_at(
                    1,
                    name="‚úß Th·ªùi Gian C√≤n L·∫°i:",
                    value=f"`„Ö§„Ö§„Ö§{countdown}„Ö§„Ö§„Ö§` ",
                    inline=False)
                await message.edit(embed=embed)
                if duration_seconds > 60:
                    await asyncio.sleep(duration_seconds)
        else:
            await ctx.send("nh·∫≠p s·ªë ng∆∞·ªùi th·∫Øng l√† <s·ªë+w>")

    @client.command()
    async def end(self, ctx, message_id: int):
        global my_emoji
        global current_winner
        global prize

        # Ki·ªÉm tra xem giveaway c√≥ t·ªìn t·∫°i kh√¥ng
        if message_id not in giveaways:
            await ctx.send("Kh√¥ng t√¨m th·∫•y giveaway.")
            return
        
        giveaway = giveaways[message_id]
        message = giveaway['message']
        prize = giveaway['prize']
        users_list = giveaway['users_list']
        # L·∫•y tin nh·∫Øn giveaway
        try:
            message = await ctx.fetch_message(message_id)
        except discord.NotFound:
            await ctx.send("Kh√¥ng t√¨m th·∫•y tin nh·∫Øn.")
            return

        # L·∫•y reaction c·ªßa tin nh·∫Øn
        reaction = discord.utils.get(message.reactions, emoji=my_emoji)
        if reaction is None:
            await ctx.send("Kh√¥ng t√¨m th·∫•y tin nh·∫Øn.")
            return

        # L·∫•y t·∫•t c·∫£ ng∆∞·ªùi tham gia giveaway
        users = [user async for user in reaction.users() if not user.bot]
        users_list = list(users)
        if client.user in users_list:
            users_list.remove(client.user)
        if not users_list:
            await ctx.send("Kh√¥ng c√≥ ai tham gia giveaway.")
            return

        # Ch·ªçn ng∆∞·ªùi th·∫Øng cu·ªôc
        current_winner = random.choice(users_list)
        winner_mentions = current_winner.mention
        await message.reply(
            content=
            f"**Ch√∫c m·ª´ng** {winner_mentions}, ƒë√£ th·∫Øng gi·∫£i th∆∞·ªüng **{prize}** trong giveaway n√†y!"
        )
        embed = discord.Embed(title=f"**{prize}**",
                                description=F"",
                                color=discord.Color.from_rgb(255, 0, 255))
        # embed.set_thumbnail(url=str(ctx.guild.icon.url))
        embed.add_field(name="Ô∏èüèÜ Ng∆∞·ªùi th·∫Øng", value=winner_mentions, inline=True)
        embed.add_field(name="üéóÔ∏è ƒê∆∞·ª£c t·ªï ch·ª©c b·ªüi",
                        value=ctx.author.mention,
                        inline=True)
        embed.set_footer(
            text=f"ƒê√£ quay th∆∞·ªüng b·∫±ng l·ªánh zend") 
        await message.edit(embed=embed)
        await message.clear_reactions()



    # L·ªánh reroll
    @client.command()
    async def rr(self, ctx, message_id: int):
    # L·∫•y tin nh·∫Øn giveaway
        global my_emoji
        global current_winner
        global prize

        # Ki·ªÉm tra xem giveaway c√≥ t·ªìn t·∫°i kh√¥ng
        if message_id not in giveaways:
            await ctx.send("Kh√¥ng t√¨m th·∫•y giveaway.")
            return
        
        giveaway = giveaways[message_id]
        message = giveaway['message']
        prize = giveaway['prize']
        users_list = giveaway['users_list']

        # L·∫•y tin nh·∫Øn giveaway
        try:
            message = await ctx.fetch_message(message_id)
        except discord.NotFound:
            await ctx.send("Kh√¥ng t√¨m th·∫•y tin nh·∫Øn.")
            return

        # L·∫•y reaction c·ªßa tin nh·∫Øn
        reaction = discord.utils.get(message.reactions, emoji=my_emoji)
        if reaction is None:
            await ctx.send("Kh√¥ng t√¨m th·∫•y tin nh·∫Øn.")
            return

        # L·∫•y t·∫•t c·∫£ ng∆∞·ªùi tham gia giveaway
        users = [user async for user in reaction.users() if not user.bot]
        users_list = list(users)
        if client.user in users_list:
            users_list.remove(client.user)
        if not users_list:
            await ctx.send("Kh√¥ng c√≥ ai tham gia giveaway.")
            return

        # Ch·ªçn ng∆∞·ªùi th·∫Øng cu·ªôc
        current_winner = random.choice(users_list)
        winner_mentions = current_winner.mention
        embed = message.embeds[0]
        embed.set_field_at(0,
                            name="Ô∏èüèÜ Ng∆∞·ªùi th·∫Øng",
                            value=winner_mentions,
                            inline=True)
        await message.edit(embed=embed)
        await message.reply(
            content=
            f"**Ch√∫c m·ª´ng** {winner_mentions}, ƒë√£ th·∫Øng gi·∫£i th∆∞·ªüng **{prize}** trong giveaway n√†y!"
        )




# H√†m chuy·ªÉn ƒë·ªïi th·ªùi gian t·ª´ ƒë·ªãnh d·∫°ng "5h", "10m", "30s" sang gi√¢y
    def parse_time(duration: str) -> int:
        if duration.endswith("s"):
            return int(duration[:-1])
        elif duration.endswith("m"):
            return int(duration[:-1]) * 60
        elif duration.endswith("h"):
            return int(duration[:-1]) * 3600
        else:
            raise ValueError("ƒê·ªãnh d·∫°ng th·ªùi gian kh√¥ng h·ª£p l·ªá.")